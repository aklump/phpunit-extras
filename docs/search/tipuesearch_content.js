var tipuesearch = {"pages":[{"title":"PHPUnit Extras","text":"    Summary  Classes to extend \\PHPUnit_Framework_TestCase.  Quick Start  composer require aklump\\phpunit-extras   Contributing  If you find this project useful... please consider making a donation.  Usage  Test a Class With String Arguments  In this example the class being tested only takes string arguments, so there is no mocking involved.  Here's how you would set that up.  &lt;?php  class Foo {    protected $schema = [     'classToBeTested' =&gt; MyClassToBeTested::class,      \/\/ You still need to defined the properties, which the constructor should set, but the values are null, indicating there is no automatic mocking.     'classArgumentsMap' =&gt; [       'alpha' =&gt; NULL,       'bravo' =&gt; NULL,     ],   ];    public function testSomething() {      \/\/ You hard code the argument values here.     $this-&gt;args-&gt;alpha = 'lorem';     $this-&gt;args-&gt;bravo = 'ipsum';      \/\/ The create the object before any asserts.     $this-&gt;createObj();     ... one or more assertions.   }  }  ","tags":"","url":"README.html"},{"title":"Working With Files","text":"  If you need to CRUD files during a test you may use the FileSandboxTrait.  Quick Start   Put the following in your test's ::setUp or ::setUpBeforeClass method depending upon if you want the directory to empty for each new test (::setUp) or not.    public function setUp() {     parent::setUp();     $this-&gt;setUpFileSandbox();   }    public function setUpBeforeClass() {     parent::setUp();     self::setUpFileSandbox();   }  Use $this-&gt;sb or self::$sb as the scratch directory path. Call $this-&gt;setUpFileSandbox() at any time to empty it's contents.  ","tags":"","url":"files.html"},{"title":"Search Results","text":" ","tags":"","url":"search--results.html"}]};
